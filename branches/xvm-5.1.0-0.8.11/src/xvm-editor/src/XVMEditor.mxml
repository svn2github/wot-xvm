<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:mx="library://ns.adobe.com/flex/mx"
    pageTitle="XVM Editor"
    backgroundColor="0x808080"
    minWidth="1000" minHeight="600" maxWidth="1000" maxHeight="600" width="1000" height="600"
    xmlns:ns1="*"
    xmlns:c="components.*"
    xmlns:p="panels.*"
    xmlns:m="markers.*">
    <s:layout>
        <s:BasicLayout/>
    </s:layout>
    <fx:Script>
        <![CDATA[
            import events.SetDefaultValueEvent;
            
            import flashx.textLayout.elements.FlowElement;
            import flashx.textLayout.elements.LinkElement;
            import flashx.textLayout.elements.ParagraphElement;
            import flashx.textLayout.elements.SpanElement;
            
            import mx.collections.ArrayCollection;
            import mx.controls.Alert;
            import mx.core.IVisualElement;
            import mx.core.IVisualElementContainer;
            import mx.events.FlexEvent;
            
            import spark.components.SkinnableContainer;

            [Bindable(event="languageChanged")]
            protected function _(textId:String):String
            {
                return resourceManager.getString("main", textId);
            }

            include "SortElementsOrder.as";
            include "IO.as";
            include "Main.as";
            include "Refresh.as";
            include "Update.as";

            protected function onCreationComplete(event:Event):void
            {
                setupXvmSiteUrl();

                createNewConfig();
                onVehicleStateChanged(event);
            }

            protected function onLanguageButtonClick(event:Event):void
            {
                resourceManager.localeChain = (event.target == lang_en) ? ['en_US', 'ru_RU'] : ['ru_RU', 'en_US'];
                sendEventAllElements(this, "languageChanged");
                setupXvmSiteUrl();
            }

            private function sendEventAllElements(obj:IVisualElement, event:String):void
            {
                obj.dispatchEvent(new Event(event));
                var c:IVisualElementContainer = obj as IVisualElementContainer;
                if (c != null)
                {
                    for (var i:int = 0; i < c.numElements; ++i)
                        sendEventAllElements(c.getElementAt(i), event);
                    return;
                }

                /*var pm:PopUpMenuButton = obj as PopUpMenuButton;
                if (pm != null)
                {
                    // Flex bug workaround
                    var a:Object = pm.dataProvider;
                    pm.dataProvider = null;
                    pm.dataProvider = a;
                }*/
            }

            protected function setupXvmSiteUrl():void
            {
                xvmSiteUrl.href = _("xvmSiteUrl");
                xvmSiteLabel.text = _("xvmSiteLabel");
            }

            protected function onRadioButtonChange(event:Event):void
            {
                vsMarkersDamageText.selectedIndex = int(damageTextRBG.selectedValue);
            }
        ]]>
    </fx:Script>
    <fx:Style>
        @namespace s "library://ns.adobe.com/flex/spark";
        s|Panel {
            skinClass: ClassReference("skins.PanelSkin");
            dropShadowVisible: false;
        }
    </fx:Style>
    <fx:Metadata>
        [ResourceBundle("main")]
    </fx:Metadata>
    <fx:Declarations>
        <s:RadioButtonGroup id="damageTextRBG" change="onRadioButtonChange(event)"/>
    </fx:Declarations>
    <s:VGroup left="0" right="0" top="0" bottom="0" gap="-1" creationComplete="onCreationComplete(event)">
        <s:BorderContainer width="1001" height="32">
            <s:HGroup top="0" left="0" bottom="0" gap="4" verticalAlign="middle" paddingLeft="4" paddingRight="4" width="361">
                <s:Button label="{_('openButton')}" icon="@Embed(source='images/fileopen.png')" click="onLoadConfigClick()"/>
                <s:Button label="{_('saveButton')}" icon="@Embed(source='images/filesave.png')" click="onSaveConfigClick(false)"/>
                <!--<mx:PopUpMenuButton itemClick="onSaveButtonClick(event)" id="saveMenu">
                    <mx:dataProvider>
                        <fx:Array>
                            <fx:Object value="save" label="{_('saveButton')}" icon="@Embed(source='images/filesave.png')"/>
                            <fx:Object value="savefull" label="{_('saveFullButton')}" icon="@Embed(source='images/filesave.png')" />
                        </fx:Array>
                    </mx:dataProvider>
                </mx:PopUpMenuButton>-->
                <s:Button label="{_('newConfig')}" icon="@Embed(source='images/filenew.png')" click="createNewConfig()"/>
                <s:Button label="{_('mergeConfigs')}" icon="@Embed(source='images/merge.png')" click="LoadConfig(true)"/>
            </s:HGroup>
            <s:HGroup top="0" bottom="0" width="200" right="50" gap="4" verticalAlign="middle" horizontalAlign="right">
                <s:Label text="{_('editorVersion')}: {Defines.EDITOR_VERSION} {_('forxvm')} {Defines.XVM_VERSION}+"/>
                <s:RichEditableText editable="false" focusEnabled="false">
                    <s:a id="xvmSiteUrl" href="www" target="_blank"><s:span id="xvmSiteLabel">www</s:span></s:a>
                </s:RichEditableText>
            </s:HGroup>
            <s:HGroup top="0" bottom="0" gap="4" verticalAlign="middle" paddingLeft="4" paddingRight="4" horizontalAlign="right" width="50" right="0">
                <mx:Image id="lang_en" width="16" height="16" source="@Embed(source='images/lang_eng_icon.png')" toolTip="English" useHandCursor="true" buttonMode="true" click="onLanguageButtonClick(event)"/>
                <mx:Image id="lang_ru" width="16" height="16" source="@Embed(source='images/lang_ru_icon.png')" toolTip="Русский" useHandCursor="true" buttonMode="true" click="onLanguageButtonClick(event)"/>
            </s:HGroup>
        </s:BorderContainer>
        <s:HGroup width="100%" height="100%" gap="0">
            <s:ButtonBar width="110" height="10" dataProvider="{vsTabs}" requireSelection="true" skinClass="skins.TileButtonBarSkin"/>
            <mx:ViewStack width="420" height="100%" backgroundColor="0xFFFFFF" id="vsTabs" creationPolicy="auto" change="{RefreshCurrentPage()}">
                <s:NavigatorContent label="{_('commonPage')}" width="100%" height="100%" id="pgCommon">
                    <s:Scroller x="0" y="0" width="420" height="100%">
                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1" creationComplete="{RefreshCurrentPage()}">
                            <p:PDefinition id="p_definition" config="definition" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                            <p:PLanguage id="p_language" config="language" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                            <p:PRating id="p_rating" config="rating" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                        </s:VGroup>
                    </s:Scroller>
                </s:NavigatorContent>
                <s:NavigatorContent label="{_('loginPage')}" width="100%" height="100%" id="pgLogin">
                    <s:Scroller x="0" y="0" width="420" height="100%">
                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1" creationComplete="{RefreshCurrentPage()}">
                            <p:PLogin id="p_login" config="login" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                            <p:PPingServers id="p_pingServers_login" config="login.pingServers" rootElementName="login" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                        </s:VGroup>
                    </s:Scroller>
                </s:NavigatorContent>
                <s:NavigatorContent label="{_('hangarPage')}" width="100%" height="100%" id="pgHangar">
                    <s:Scroller x="0" y="0" width="420" height="100%">
                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1" creationComplete="{RefreshCurrentPage()}">
                            <p:PHangar id="p_hangar" config="hangar" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                            <p:PPingServers id="p_pingServers_hangar" config="hangar.pingServers" rootElementName="hangar" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                        </s:VGroup>
                    </s:Scroller>
                </s:NavigatorContent>
                <s:NavigatorContent label="{_('battlePage')}" width="100%" height="100%" id="pgBattle">
                    <s:Scroller x="0" y="0" width="420" height="100%">
                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1" creationComplete="{RefreshCurrentPage()}">
                            <p:PBattle id="p_battle" config="battle" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                            <p:PFragCorrelation id="p_fragCorrelation" config="fragCorrelation" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                            <p:PExpertPanel id="p_expertPanel" config="expertPanel" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                        </s:VGroup>
                    </s:Scroller>
                </s:NavigatorContent>
                <s:NavigatorContent label="{_('markersPage')}" width="100%" height="100%" id="pgMarkers">
                    <s:Scroller x="0" y="0" width="420" height="100%">
                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1">
                            <s:BorderContainer width="100%" height="165" borderVisible="false">
                                <s:HGroup x="5" y="5" width="100%" height="100%">
                                    <s:BorderContainer borderVisible="false">
                                        <s:ButtonBar width="150" dataProvider="{vsMarkers}" id="elements" change="onVehicleStateChanged(event)" requireSelection="true" skinClass="skins.TileButtonBarSkin"/>
                                    </s:BorderContainer>
                                    <s:TileGroup requestedColumnCount="2" verticalGap="5">
                                        <s:ToggleButton width="110" label="{_('ally')}" id="ally" selected="true" change="onVehicleStateChanged(event)"/>
                                        <s:ToggleButton width="110" label="{_('enemy')}" id="enemy" change="onVehicleStateChanged(event)"/>
                                        <s:ToggleButton width="110" label="{_('alive')}" id="alive" selected="true" change="onVehicleStateChanged(event)"/>
                                        <s:ToggleButton width="110" label="{_('dead')}" id="dead" change="onVehicleStateChanged(event)"/>
                                        <s:ToggleButton width="110" label="{_('normal')}" id="normal" selected="true" change="onVehicleStateChanged(event)"/>
                                        <s:ToggleButton width="110" label="{_('extended')}" id="extended" change="onVehicleStateChanged(event)"/>
                                    </s:TileGroup>
                                </s:HGroup>
                            </s:BorderContainer>
                            <mx:ViewStack id="vsMarkers" width="100%" height="100%">
                                <s:NavigatorContent label="{_('VehicleClass')}" id="vehicleIcon">
                                    <s:Scroller x="0" y="0" width="100%" height="100%">
                                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1">
                                            <m:MVehicleIcon id="m_vehicleIcon" config="vehicleIcon" valueChanged="updateMarkerValue(event)" setDefaultValue="onSetDefaultMarkerValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                                        </s:VGroup>
                                    </s:Scroller>
                                </s:NavigatorContent>
                                <s:NavigatorContent label="{_('HealthBar')}" id="healthBar">
                                    <s:Scroller x="0" y="0" width="100%" height="100%">
                                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1">
                                            <m:MHealthBar id="m_healthBar" config="healthBar" valueChanged="updateMarkerValue(event)" setDefaultValue="onSetDefaultMarkerValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                                        </s:VGroup>
                                    </s:Scroller>
                                </s:NavigatorContent>
                                <s:NavigatorContent label="{_('DamageText')}" id="DamageTextNavContent">
                                    <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1">
                                        <s:VGroup gap="-1" paddingLeft="10" paddingBottom="5">
                                            <s:RadioButton group="{damageTextRBG}" value="0" label="{_('DamageTextPlayer')}" selected="true"/>
                                            <s:RadioButton group="{damageTextRBG}" value="1" label="{_('DamageTextSquadman')}"/>
                                            <s:RadioButton group="{damageTextRBG}" value="2" label="{_('DamageTextOther')}"/>
                                        </s:VGroup>
                                        <mx:ViewStack id="vsMarkersDamageText" width="100%" height="100%">
                                            <s:NavigatorContent label="{_('DamageTextPlayer')}" id="damageTextPlayer">
                                                <s:Scroller x="0" y="0" width="100%" height="100%">
                                                    <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1">
                                                        <m:MDamageText title="{_('DamageTextPlayer')} *" id="m_damageTextPlayer" config="damageTextPlayer" valueChanged="updateMarkerValue(event)" setDefaultValue="onSetDefaultMarkerValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                                                        <m:MFont id="m_damageTextPlayer_font" config="damageTextPlayer.font" valueChanged="updateMarkerValue(event)" setDefaultValue="onSetDefaultMarkerValue(event); RefreshCurrentPage();"/>
                                                        <m:MShadow id="m_damageTextPlayer_shadow" config="damageTextPlayer.shadow" valueChanged="updateMarkerValue(event)" setDefaultValue="onSetDefaultMarkerValue(event); RefreshCurrentPage();"/>
                                                    </s:VGroup>
                                                </s:Scroller>
                                            </s:NavigatorContent>
                                            <s:NavigatorContent label="{_('DamageTextSquadman')}" id="damageTextSquadman">
                                                <s:Scroller x="0" y="0" width="100%" height="100%">
                                                    <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1">
                                                        <m:MDamageText title="{_('DamageTextSquadman')} *" id="m_damageTextSquadman" config="damageTextSquadman" valueChanged="updateMarkerValue(event)" setDefaultValue="onSetDefaultMarkerValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                                                        <m:MFont id="m_damageTextSquadman_font" config="damageTextSquadman.font" valueChanged="updateMarkerValue(event)" setDefaultValue="onSetDefaultMarkerValue(event); RefreshCurrentPage();"/>
                                                        <m:MShadow id="m_damageTextSquadman_shadow" config="damageTextSquadman.shadow" valueChanged="updateMarkerValue(event)" setDefaultValue="onSetDefaultMarkerValue(event); RefreshCurrentPage();"/>
                                                    </s:VGroup>
                                                </s:Scroller>
                                            </s:NavigatorContent>
                                            <s:NavigatorContent label="{_('DamageTextOther')}" id="damageText">
                                                <s:Scroller x="0" y="0" width="100%" height="100%">
                                                    <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1">
                                                        <m:MDamageText title="{_('DamageTextOther')}" id="m_damageText" config="damageText" valueChanged="updateMarkerValue(event)" setDefaultValue="onSetDefaultMarkerValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                                                        <m:MFont id="m_damageText_font" config="damageText.font" valueChanged="updateMarkerValue(event)" setDefaultValue="onSetDefaultMarkerValue(event); RefreshCurrentPage();"/>
                                                        <m:MShadow id="m_damageText_shadow" config="damageText.shadow" valueChanged="updateMarkerValue(event)" setDefaultValue="onSetDefaultMarkerValue(event); RefreshCurrentPage();"/>
                                                    </s:VGroup>
                                                </s:Scroller>
                                            </s:NavigatorContent>
                                        </mx:ViewStack>
                                    </s:VGroup>
                                </s:NavigatorContent>
                                <s:NavigatorContent label="{_('ContourIcon')}" id="contourIcon">
                                    <s:Scroller x="0" y="0" width="100%" height="100%">
                                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1">
                                            <m:MContourIcon id="m_contourIcon" config="contourIcon" valueChanged="updateMarkerValue(event)" setDefaultValue="onSetDefaultMarkerValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                                        </s:VGroup>
                                    </s:Scroller>
                                </s:NavigatorContent>
                                <s:NavigatorContent label="{_('ClanIcon')}" id="clanIcon">
                                    <s:Scroller x="0" y="0" width="100%" height="100%">
                                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1">
                                            <m:MClanIcon id="m_clanIcon" config="clanIcon" valueChanged="updateMarkerValue(event)" setDefaultValue="onSetDefaultMarkerValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                                        </s:VGroup>
                                    </s:Scroller>
                                </s:NavigatorContent>
                                <s:NavigatorContent label="{_('LevelIcon')}" id="levelIcon">
                                    <s:Scroller x="0" y="0" width="100%" height="100%">
                                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1">
                                            <m:MLevelIcon id="m_levelIcon" config="levelIcon" valueChanged="updateMarkerValue(event)" setDefaultValue="onSetDefaultMarkerValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                                        </s:VGroup>
                                    </s:Scroller>
                                </s:NavigatorContent>
                                <s:NavigatorContent label="{_('ActionMarker')}" id="actionMarker">
                                    <s:Scroller x="0" y="0" width="100%" height="100%">
                                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1">
                                            <m:MActionMarker id="m_actionMarker" config="actionMarker" valueChanged="updateMarkerValue(event)" setDefaultValue="onSetDefaultMarkerValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                                        </s:VGroup>
                                    </s:Scroller>
                                </s:NavigatorContent>
                                <s:NavigatorContent label="{_('TextFields')}" id="textFields">
                                    <s:Scroller x="0" y="0" width="100%" height="100%">
                                        <m:MTextFieldList id="m_textFieldList" config="textFields" valueChanged="updateMarkerTextFieldValue(event)" setDefaultValue="onSetDefaultMarkerValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                                    </s:Scroller>
                                </s:NavigatorContent>
                            </mx:ViewStack>
                        </s:VGroup>
                    </s:Scroller>
                </s:NavigatorContent>
                <s:NavigatorContent label="{_('hotkeysPage')}" width="100%" height="100%" id="pgHotkeys">
                    <s:Scroller x="0" y="0" width="420" height="100%">
                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1" creationComplete="{RefreshCurrentPage()}">
                            <p:PHotkeys id="p_hotkeys" config="hotkeys" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                        </s:VGroup>
                    </s:Scroller>
                </s:NavigatorContent>
                <s:NavigatorContent label="{_('hitLogPage')}" width="100%" height="100%" id="pgHitLog">
                    <s:Scroller x="0" y="0" width="420" height="100%">
                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1" creationComplete="{RefreshCurrentPage()}">
                            <p:PHitLog id="p_hitLog" config="hitLog" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                        </s:VGroup>
                    </s:Scroller>
                </s:NavigatorContent>
                <s:NavigatorContent label="{_('captureBarPage')}" width="100%" height="100%" id="pgCaptureBar">
                    <s:Scroller x="0" y="0" width="420" height="100%">
                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1" creationComplete="{RefreshCurrentPage()}">
                            <p:PCaptureBar id="p_captureBar" config="captureBar" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                        </s:VGroup>
                    </s:Scroller>
                </s:NavigatorContent>
                <s:NavigatorContent label="{_('minimapPage')}" width="100%" height="100%" id="pgMinimap">
                    <s:Scroller x="0" y="0" width="420" height="100%">
                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1" creationComplete="{RefreshCurrentPage()}">
                            <p:PMinimap id="p_minimap" config="minimap" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                        </s:VGroup>
                    </s:Scroller>
                </s:NavigatorContent>
                <s:NavigatorContent label="{_('LoadingScreen')}" width="100%" height="100%" id="pgBattleLoading">
                    <s:Scroller x="0" y="0" width="420" height="100%">
                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1" creationComplete="{RefreshCurrentPage()}">
                            <p:PBattleLoading id="p_battleLoading" config="battleLoading" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                            <p:PBattleLoadingIcons id="p_battleLoading_icons" config="battleLoading.clanIcon" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                            <p:PBattleLoadingText id="p_battleLoading_text" config="battleLoading.text" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                        </s:VGroup>
                    </s:Scroller>
                </s:NavigatorContent>
                <s:NavigatorContent label="{_('StatisticForm')}" width="100%" height="100%" id="pgStatisticForm">
                    <s:Scroller x="0" y="0" width="420" height="100%">
                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1" creationComplete="{RefreshCurrentPage()}">
                            <p:PStatisticForm id="p_statisticForm" config="statisticForm" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                            <p:PStatisticFormIcons id="p_statisticForm_icons" config="statisticForm.clanIcon" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                            <p:PStatisticFormText id="p_statisticForm_text" config="statisticForm.text" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                        </s:VGroup>
                    </s:Scroller>
                </s:NavigatorContent>
                <s:NavigatorContent label="{_('PlayersPanel1')}" width="100%" height="100%" id="pgPlayersPanel1">
                    <s:Scroller x="0" y="0" width="420" height="100%">
                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1" creationComplete="{RefreshCurrentPage()}">
                            <p:PPlayersPanel id="p_playersPanel" config="playersPanel" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                            <p:PPlayersPanelIcons id="p_playersPanel_icons" config="playersPanel.clanIcon" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                            <p:PEnemySpotted id="p_playersPanel_enemySpotted" config="playersPanel.enemySpottedMarker" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                        </s:VGroup>
                    </s:Scroller>
                </s:NavigatorContent>
                <s:NavigatorContent label="{_('PlayersPanel2')}" width="100%" height="100%" id="pgPlayersPanel2">
                    <s:Scroller x="0" y="0" width="420" height="100%">
                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1" creationComplete="{RefreshCurrentPage()}">
                            <p:PPlayersPanelMedium id="p_playersPanel_medium" config="playersPanel.medium" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                            <p:PPlayersPanelMedium2 id="p_playersPanel_medium2" config="playersPanel.medium2" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                            <p:PPlayersPanelLarge id="p_playersPanel_large" config="playersPanel.large" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                        </s:VGroup>
                    </s:Scroller>
                </s:NavigatorContent>
                <s:NavigatorContent label="{_('BattleResults')}" width="100%" height="100%" id="pgBattleResults">
                    <s:Scroller x="0" y="0" width="420" height="100%">
                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1" creationComplete="{RefreshCurrentPage()}">
                            <p:PBattleResults id="p_battleResults" config="battleResults" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                        </s:VGroup>
                    </s:Scroller>
                </s:NavigatorContent>
                <s:NavigatorContent label="{_('colorsPage1')}" width="100%" height="100%" id="pgColors1">
                        <mx:Accordion id="accColors1" width="420" height="100%" change="{RefreshCurrentPage()}">
                            <s:NavigatorContent id="nc_systemColors" label="{_('SystemColors')}" width="100%" height="100%">
                                <p:PSystemColors id="p_systemColors" config="colors.system" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                            </s:NavigatorContent>
                            <s:NavigatorContent id="nc_damageColors" label="{_('DamageColors')}" width="100%" height="100%">
                                <p:PDamageColors id="p_damageColors" config="colors.damage" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                            </s:NavigatorContent>
                            <s:NavigatorContent id="nc_damageKindColors" label="{_('DamageKindColors')}" width="100%" height="100%">
                                <p:PDamageKindColors id="p_damageKindColors" config="colors.dmg_kind" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                            </s:NavigatorContent>
                            <s:NavigatorContent id="nc_vtypeColors" label="{_('VTypeColors')}" width="100%" height="100%">
                                <p:PVTypeColors id="p_vtypeColors" config="colors.vtype" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                            </s:NavigatorContent>
                            <s:NavigatorContent id="nc_colors_hp" label="{_('DynamicColorHealthAmount')}" width="100%" height="100%">
                                <p:PDynamicValues id="p_colors_hp" config="colors.hp" minimum="0" maximum="3000" editorClass="DynamicColorEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                            </s:NavigatorContent>
                            <s:NavigatorContent id="nc_colors_hp_ratio" label="{_('DynamicColorHealthRatio')}" width="100%" height="100%">
                                <p:PDynamicValues id="p_colors_hp_ratio" config="colors.hp_ratio" minimum="0" maximum="101" editorClass="DynamicColorEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                            </s:NavigatorContent>
                        </mx:Accordion>
                </s:NavigatorContent>
                <s:NavigatorContent label="{_('colorsPage2')}" width="100%" height="100%" id="pgColors2">
                        <mx:Accordion id="accColors2" width="420" height="100%" change="{RefreshCurrentPage()}">
                            <s:NavigatorContent id="nc_colors_x" label="{_('DynamicColorXVMSCALE')}" width="100%" height="100%">
                                <p:PDynamicValues id="p_colors_x" config="colors.x" minimum="0" maximum="101" editorClass="DynamicColorEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                            </s:NavigatorContent>
                            <s:NavigatorContent id="nc_colors_eff" label="{_('DynamicColorEfficiency')}" width="100%" height="100%">
                                <p:PDynamicValues id="p_colors_eff" config="colors.eff" minimum="0" maximum="3000" editorClass="DynamicColorEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                            </s:NavigatorContent>
                            <s:NavigatorContent id="nc_colors_wn6" label="{_('DynamicColorWN6')}" width="100%" height="100%">
                                <p:PDynamicValues id="p_colors_wn6" config="colors.wn6" minimum="0" maximum="3000" editorClass="DynamicColorEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                            </s:NavigatorContent>
                            <s:NavigatorContent id="nc_colors_wn8" label="{_('DynamicColorWN8')}" width="100%" height="100%">
                                <p:PDynamicValues id="p_colors_wn8" config="colors.wn8" minimum="0" maximum="3000" editorClass="DynamicColorEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                            </s:NavigatorContent>
                            <s:NavigatorContent id="nc_colors_rating" label="{_('DynamicColorWinRate')}" width="100%" height="100%">
                                <p:PDynamicValues id="p_colors_rating" config="colors.rating" minimum="0" maximum="101" editorClass="DynamicColorEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                            </s:NavigatorContent>
                            <s:NavigatorContent id="nc_colors_kb" label="{_('DynamicColorKiloBattles')}" width="100%" height="100%">
                                <p:PDynamicValues id="p_colors_kb" config="colors.kb" minimum="0" maximum="100" editorClass="DynamicColorEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                            </s:NavigatorContent>
                            <s:NavigatorContent id="nc_colors_tbattles" label="{_('DynamicColorBattlesForTank')}" width="100%" height="100%">
                                <p:PDynamicValues id="p_colors_tbattles" config="colors.t_battles" minimum="0" maximum="9999" editorClass="DynamicColorEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                            </s:NavigatorContent>
                            <!--<s:NavigatorContent id="nc_colors_e" label="{_('DynamicColorE')}" width="100%" height="100%">
                                <p:PDynamicValues id="p_colors_e" config="colors.e" minimum="0" maximum="20" stepSize="0.5" editorClass="DynamicColorEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                            </s:NavigatorContent>
                            <s:NavigatorContent id="nc_colors_tdb" label="{_('DynamicColorTDB')}" width="100%" height="100%">
                                <p:PDynamicValues id="p_colors_tdb" config="colors.tdb" minimum="0" maximum="5000" editorClass="DynamicColorEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                            </s:NavigatorContent>
                            <s:NavigatorContent id="nc_colors_tdv" label="{_('DynamicColorTDV')}" width="100%" height="100%">
                                <p:PDynamicValues id="p_colors_tdv" config="colors.tdv" minimum="0" maximum="3" stepSize="0.1" editorClass="DynamicColorEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                            </s:NavigatorContent>
                            <s:NavigatorContent id="nc_colors_tfb" label="{_('DynamicColorTFB')}" width="100%" height="100%">
                                <p:PDynamicValues id="p_colors_tfb" config="colors.tfb" minimum="0" maximum="3" stepSize="0.1" editorClass="DynamicColorEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                            </s:NavigatorContent>
                            <s:NavigatorContent id="nc_colors_tsb" label="{_('DynamicColorTSB')}" width="100%" height="100%">
                                <p:PDynamicValues id="p_colors_tsb" config="colors.tsb" minimum="0" maximum="3" stepSize="0.1" editorClass="DynamicColorEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                            </s:NavigatorContent>-->
                        </mx:Accordion>
                </s:NavigatorContent>
                <s:NavigatorContent label="{_('transparencyPage')}" width="100%" height="100%" id="pgTransparency">
                    <mx:Accordion id="accTransparency" width="420" height="100%" change="{RefreshCurrentPage()}">
                        <s:NavigatorContent id="nc_alpha_hp" label="{_('DynamicAlphaHealthAmount')}" width="100%" height="100%">
                            <p:PDynamicValues id="p_alpha_hp" config="alpha.hp" minimum="0" maximum="3000" editorClass="DynamicAlphaEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                        </s:NavigatorContent>
                        <s:NavigatorContent id="nc_alpha_hp_ratio" label="{_('DynamicAlphaHealthRatio')}" width="100%" height="100%">
                            <p:PDynamicValues id="p_alpha_hp_ratio" config="alpha.hp_ratio" minimum="0" maximum="101" editorClass="DynamicAlphaEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                        </s:NavigatorContent>
                        <s:NavigatorContent id="nc_alpha_x" label="{_('DynamicAlphaXVMSCALE')}" width="100%" height="100%">
                            <p:PDynamicValues id="p_alpha_x" config="alpha.x" minimum="0" maximum="101" editorClass="DynamicAlphaEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                        </s:NavigatorContent>
                        <s:NavigatorContent id="nc_alpha_eff" label="{_('DynamicAlphaEfficiency')}" width="100%" height="100%">
                            <p:PDynamicValues id="p_alpha_eff" config="alpha.eff" minimum="0" maximum="3000" editorClass="DynamicAlphaEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                        </s:NavigatorContent>
                        <s:NavigatorContent id="nc_alpha_wn6" label="{_('DynamicAlphaWN6')}" width="100%" height="100%">
                            <p:PDynamicValues id="p_alpha_wn6" config="alpha.wn6" minimum="0" maximum="3000" editorClass="DynamicAlphaEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                        </s:NavigatorContent>
                        <s:NavigatorContent id="nc_alpha_wn8" label="{_('DynamicAlphaWN8')}" width="100%" height="100%">
                            <p:PDynamicValues id="p_alpha_wn8" config="alpha.wn8" minimum="0" maximum="3000" editorClass="DynamicAlphaEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                        </s:NavigatorContent>
                        <s:NavigatorContent id="nc_alpha_rating" label="{_('DynamicAlphaWinRate')}" width="100%" height="100%">
                            <p:PDynamicValues id="p_alpha_rating" config="alpha.rating" minimum="0" maximum="101" editorClass="DynamicAlphaEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                        </s:NavigatorContent>
                        <s:NavigatorContent id="nc_alpha_kb" label="{_('DynamicAlphaKiloBattles')}" width="100%" height="100%">
                            <p:PDynamicValues id="p_alpha_kb" config="alpha.kb" minimum="0" maximum="100" editorClass="DynamicAlphaEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                        </s:NavigatorContent>
                        <s:NavigatorContent id="nc_alpha_tbattles" label="{_('DynamicAlphaBattlesForTank')}" width="100%" height="100%">
                            <p:PDynamicValues id="p_alpha_tbattles" config="alpha.t_battles" minimum="0" maximum="9999" editorClass="DynamicAlphaEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                        </s:NavigatorContent>
                        <!--<s:NavigatorContent id="nc_alpha_e" label="{_('DynamicAlphaE')}" width="100%" height="100%">
                            <p:PDynamicValues id="p_alpha_e" config="alpha.e" minimum="0" maximum="20" stepSize="0.5" editorClass="DynamicAlphaEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                        </s:NavigatorContent>
                        <s:NavigatorContent id="nc_alpha_tdb" label="{_('DynamicAlphaTDB')}" width="100%" height="100%">
                            <p:PDynamicValues id="p_alpha_tdb" config="alpha.tdb" minimum="0" maximum="5000" editorClass="DynamicAlphaEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                        </s:NavigatorContent>
                        <s:NavigatorContent id="nc_alpha_tdv" label="{_('DynamicAlphaTDV')}" width="100%" height="100%">
                            <p:PDynamicValues id="p_alpha_tdv" config="alpha.tdv" minimum="0" maximum="3" stepSize="0.1" editorClass="DynamicAlphaEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                        </s:NavigatorContent>
                        <s:NavigatorContent id="nc_alpha_tfb" label="{_('DynamicAlphaTFB')}" width="100%" height="100%">
                            <p:PDynamicValues id="p_alpha_tfb" config="alpha.tfb" minimum="0" maximum="3" stepSize="0.1" editorClass="DynamicAlphaEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                        </s:NavigatorContent>
                        <s:NavigatorContent id="nc_alpha_tsb" label="{_('DynamicAlphaTSB')}" width="100%" height="100%">
                            <p:PDynamicValues id="p_alpha_tsb" config="alpha.tsb" minimum="0" maximum="3" stepSize="0.1" editorClass="DynamicAlphaEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                        </s:NavigatorContent>-->
                </mx:Accordion>
                </s:NavigatorContent>
                <s:NavigatorContent label="{_('textsPage')}" width="100%" height="100%" id="pgTexts">
                    <s:Scroller x="0" y="0" width="420" height="100%">
                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1" creationComplete="{RefreshCurrentPage()}">
                            <p:PTurretMarkers id="p_turretMarkers" config="turretMarkers" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                            <p:PVTypeTexts id="p_vtypeTexts" config="texts.vtype" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                        </s:VGroup>
                    </s:Scroller>
                </s:NavigatorContent>
                <s:NavigatorContent label="{_('vehicleNames')}" width="100%" height="100%" id="pgVehicleNames">
                    <p:PDynamicValues id="p_vehicleNames" config="vehicleNames" editorClass="DynamicVehicleNameEdit" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();" creationComplete="{RefreshCurrentPage()}"/>
                </s:NavigatorContent>
                <s:NavigatorContent label="{_('miscPage')}" width="100%" height="100%" id="pgMisc">
                    <s:Scroller x="0" y="0" width="420" height="100%">
                        <s:VGroup x="0" y="0" width="100%" height="100%" gap="-1" creationComplete="{RefreshCurrentPage()}">
                            <p:PIconSet id="p_iconSet" config="iconset" valueChanged="updateValue(event)" setDefaultValue="onSetDefaultValue(event); RefreshCurrentPage();"/>
                        </s:VGroup>
                    </s:Scroller>
                </s:NavigatorContent>
            </mx:ViewStack>
            <c:PreviewComponent height="100%" id="preview"/>
        </s:HGroup>
    </s:VGroup>
</s:Application>
