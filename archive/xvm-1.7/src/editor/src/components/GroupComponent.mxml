<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" initialize="onInitialize(event)">
	<fx:Script>
		<![CDATA[
			import events.XVMValueEvent;
			
			import mx.events.FlexEvent;
			
			import spark.components.CheckBox;
			import spark.components.RadioButton;
			
			import utils.Const;

			protected function get title():String
			{
				return "Title";
			}

			protected function get elements():Array
			{
				return [{label:"", path:""}];
			}

			private var cbValues:Array = [];
			
			protected function onInitialize(event:FlexEvent):void
			{
				var value:uint = 1;
				for each (var e:Object in elements)
				{
					var r:RadioButton = new RadioButton();
					r.label = e["label"];
					r.accessibilityName = e["path"];
					r.selected = value == 1;
					r.group = rbg;
					r.value = value;
					rb.addElement(r);

					var c:CheckBox = new CheckBox();
					c.label = e["label"];
					c.accessibilityName = e["path"];
					c.selected = value == 1;
					c.addEventListener(Event.CHANGE, cbChange);
					cbValues.push({c:c, value:value});
 					cb.addElement(c);
					
					value *= 2;
				}
			}

			protected var _mode:int = Const.MODE_SINGLE;
			public function setMode(mode:int):void
			{
				this._mode = mode;
				panel.title = (mode == Const.MODE_MULTI) ? "" : title;
				cbMode.visible = (mode == Const.MODE_MULTI);
				vs.selectedIndex = (mode == Const.MODE_MULTI) ? 1 : 0;
			}

			public function getActiveElements():uint
			{
				if (_mode == Const.MODE_SINGLE)
					return uint(rbg.selection.value);
				
				var result:uint = 0;
				for each (var c:Object in cbValues)
				{
					if ((c["c"] as CheckBox).selected)
						result += uint(c["value"]);
				}
				return result;
			}

			public function getActivePaths():Array
			{
				if (_mode == Const.MODE_SINGLE)
					return [rbg.selection.accessibilityName];
				
				var result:Array = [];
				for each (var c:Object in cbValues)
				{
					var cb:CheckBox = c["c"] as CheckBox;
					if (cb.selected)
						result.push(cb.accessibilityName);
				}
				return result;
			}
			
			protected function cbChange(event:Event):void
			{
				var sender_cb:CheckBox = event.target as CheckBox;
				if (sender_cb)
				{
					if (sender_cb == cbMode)
					{
						for each (var c:Object in cbValues)
							(c["c"] as CheckBox).selected = cbMode.selected;
					}
					else
					{
						// TODO: implement tri-state
						var state: Boolean = true;
						for each (var c2:Object in cbValues)
						{
							if (!(c2["c"] as CheckBox).selected)
							{
								state = false;
								break;
							}
						}
						cbMode.selected = state;
					}
				}

				dispatchEvent(new XVMValueEvent(Const.GroupComponent));
			}
		]]>
	</fx:Script>
	<fx:Metadata>
		[Event(name="xvmvalue", type="events.XVMValueEvent")]
	</fx:Metadata>
	<fx:Declarations>
		<s:RadioButtonGroup id="rbg" change="cbChange(event)"/>
	</fx:Declarations>
	<s:Panel x="0" y="0" width="{width}" height="{height}" skinClass="skins.MyPanelSkin" dropShadowVisible="false" backgroundColor="0xEEEEEE" id="panel" creationComplete="setMode(Const.MODE_SINGLE)">
		<s:CheckBox x="4" y="-18" label="{title}" fontWeight="bold" id="cbMode" change="cbChange(event)"/>
		<mx:ViewStack id="vs" width="100%" height="100%">
			<s:NavigatorContent width="100%" height="100%">
				<s:VGroup id="rb" left="4" right="4" top="4" bottom="4" gap="0">
				</s:VGroup>
			</s:NavigatorContent>
			<s:NavigatorContent width="100%" height="100%">
				<s:VGroup id="cb" left="4" right="4" top="4" bottom="4" gap="0">
				</s:VGroup>
			</s:NavigatorContent>
		</mx:ViewStack>
	</s:Panel>
</s:Group>
