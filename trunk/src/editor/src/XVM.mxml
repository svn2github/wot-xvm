<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:mxml="http://www.sephiroth.it/2006/mxml"
			   xmlns:ns1="*"
			   xmlns:c="components.*"
			   pageTitle="XVM Editor"
			   minWidth="800" minHeight="520" width="800" height="520"
			   backgroundColor="0x808080"
			   preinitialize="application_preinitializeHandler(event)"
			   >
	<fx:Script>
		<![CDATA[
			import events.XVMValueEvent;
			
			import helpers.ConfigHelper;
			
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.messaging.channels.StreamingAMFChannel;
			import mx.utils.ObjectUtil;
			
			import spark.components.CheckBox;
			import spark.components.NumericStepper;
			import spark.components.Panel;
			import spark.components.RadioButton;
			import spark.components.RadioButtonGroup;
			import spark.components.SkinnableContainer;
			
			import utils.Const;
			import utils.UIUtils;

			private const EDITOR_VERSION:String = "0.0.1.a1";

			include "Main.as"
			include "Main_IO.as"

			public var config:* = null;

			protected function application_preinitializeHandler(event:FlexEvent):void
			{
				// Initialize Singleton
				ConfigHelper.instance;
			}

			protected function lEditorVersion_creationCompleteHandler(event:FlexEvent):void
			{
				lEditorVersion.text = EDITOR_VERSION;
			}

			protected function lConfigVersion_creationCompleteHandler(event:FlexEvent):void
			{
				lConfigVersion.text = ConfigHelper.CurrentConfigVersion();
			}

			protected function cbMulti_changeHandler(event:Event):void
			{
				var mode:int = cbMulti.selected ? Const.MODE_MULTI : Const.MODE_SINGLE;
				this.gPlayer.setMode(mode);
				this.gStatus.setMode(mode);
				this.gView.setMode(mode);
				this.gElements.setMode(mode);
				RefreshMarkers();
			}

			protected function valueChanged(event:Event):void
			{
				valueChanged_p(event.target as UIComponent);
			}

			private function valueChanged_p(c:UIComponent):void
			{
				var path:String = Mapping.ValueMapping[c.id];
				var value:Object = UIUtils.getComponentValue(c as UIComponent);
				ChangeValue([ path ], value);
			}

			protected function markerValueChanged(event:XVMValueEvent):void
			{
				ChangeMarkerValue(event.data["path"], event.value);
			}

			protected function groupChanged(event:XVMValueEvent):void
			{
				RefreshMarkers();
			}

			protected function onCreateNewConfigClick():void
			{
				// TODO: remove after implementing markers editing
				tabs.removeChild(pgMarkers);
				/////////////////////

				lastFileName = "XVM.xvmconf";
				ParseConfigXml(ConfigHelper.ConfigToXml(new Object()));
				this.c_definition_url.text = "http://code.google.com/p/wot-xvm/"; // TODO: use default value (from schema?)
				valueChanged_p(this.c_definition_url);
				this.c_definition_date.selectedDate = new Date();
				valueChanged_p(this.c_definition_date);
				this.c_definition_gameVersion.text = "0.7.1"; // TODO: use default value (from schema?)
				valueChanged_p(this.c_definition_gameVersion);
				this.c_definition_modVersion.text = "1.0"; // TODO: use default value (from schema?)
				valueChanged_p(this.c_definition_modVersion);
			}

			protected function onLoadConfigClick():void
			{
				LoadConfig();
			}

			protected function onSaveConfigClick():void
			{
				config["editorVersion"] = EDITOR_VERSION;
				SaveConfig(ConfigHelper.ConfigToXml(config));
			}

			protected function onSavePreviewClick():void
			{
				// TODO
			}

			protected function clearDebugArea(event:MouseEvent):void
			{
				if (dbgNav.selectedChild == dbgnc1)
					d.text = "";
				else
					d2.text = "";
			}


			protected function linkbutton1_clickHandler(event:MouseEvent):void
			{
				navigateToURL(new URLRequest("http://code.google.com/p/wot-xvm/"), "_blank");
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Разместить невизуальные элементы (например, службы или объекты значений) -->
	</fx:Declarations>
	<s:BorderContainer top="0" left="0" right="0" height="32" creationPolicy="ContainerCreationPolicy.ALL">
		<s:HGroup top="0" left="0" right="456" bottom="0" gap="4" verticalAlign="middle" paddingLeft="4" paddingRight="4">
			<s:Button label="Новый" click="onCreateNewConfigClick()"/>
			<s:Button label="Открыть" click="onLoadConfigClick()"/>
			<s:Button label="Сохранить" click="onSaveConfigClick()"/>
			<s:Button label="Экспорт изображения" click="onSavePreviewClick()" enabled="false"/>
		</s:HGroup>
		<s:HGroup top="0" left="403" right="167" bottom="0" gap="4" verticalAlign="middle" paddingLeft="4" paddingRight="4">
			<s:Label text="Версия редактора:"/>
			<s:Label text="x.x.x" id="lEditorVersion" creationComplete="lEditorVersion_creationCompleteHandler(event)" fontWeight="bold"/>
			<s:Label text="Версия конфига:"/>
			<s:Label text="x.x.x" id="lConfigVersion" creationComplete="lConfigVersion_creationCompleteHandler(event)" fontWeight="bold"/>
		</s:HGroup>
		<s:HGroup top="0" left="705" right="0" bottom="0" gap="4" verticalAlign="middle" paddingLeft="4" paddingRight="4">
			<s:Button label="En" width="40" enabled="false"/>
			<s:Button label="Ru" width="40" enabled="false"/>
		</s:HGroup>
	</s:BorderContainer>
	<mx:TabNavigator id="tabs" creationPolicy="ContainerCreationPolicy.ALL" creationComplete="onCreateNewConfigClick()" height="488" y="31" width="800" x="0">
		<s:NavigatorContent label="Маркеры" width="100%" height="100%" id="pgMarkers">
			<s:CheckBox label="Режим" x="5" y="2" id="cbMulti" change="cbMulti_changeHandler(event)" fontWeight="bold" fontSize="12" textAlign="left" width="122"/>
			<c:GroupPlayer x="0" y="20" id="gPlayer" xvmvalue="groupChanged(event)"/>
			<c:GroupStatus x="0" y="119" id="gStatus" xvmvalue="groupChanged(event)"/>
			<c:GroupView x="0" y="182" id="gView" xvmvalue="groupChanged(event)"/>
			<c:GroupElements x="0" y="243" id="gElements" xvmvalue="groupChanged(event)" height="212"/>
			<mx:AdvancedDataGrid id="adg" designViewDataType="tree" y="0" height="456" width="350" x="135" editable="false"
				initialize="adg.validateNow(); adg.expandAll();"
				sortableColumns="false"
			 	headerHeight="0"
				creationComplete="addEventListener(XVMValueEvent.TYPE, markerValueChanged)">
				<mx:dataProvider>
					<mx:HierarchicalData source="{Mapping.dpConfig}"/>
				</mx:dataProvider>
				<mx:columns>
					<mx:AdvancedDataGridColumn headerText="Параметр" id="key" dataField="key" width="190" minWidth="190"/>
					<mx:AdvancedDataGridColumn headerText="Значение" id="item" width="120" minWidth="120"/>
				</mx:columns>
				<mx:rendererProviders>
					<mx:AdvancedDataGridRendererProvider column="{item}" renderer="components.ADGItemRenderer"/>
				</mx:rendererProviders>
			</mx:AdvancedDataGrid>
			<s:HGroup y="0" height="200" gap="0" width="316" x="484">
				<ns1:FlashComponentPlaceholder width="100%" id="emul1" height="200"/>
			</s:HGroup>
			<mx:TabNavigator x="484" y="201" width="316" height="255" id="dbgNav">
				<s:NavigatorContent label="Debug 1" width="100%" height="100%" id="dbgnc1">
					<s:TextArea x="0" y="0" width="100%" height="100%" id="d" editable="false" toolTip="Debug area 1"/>
				</s:NavigatorContent>
				<s:NavigatorContent label="Debug 2" width="100%" height="100%" id="dbgnc2">
					<s:TextArea y="0" height="100%" id="d2" editable="false" width="100%" x="0" toolTip="Debug area 2"/>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<s:Button x="770" y="201" label="C" width="30" click="clearDebugArea(event)" toolTip="Clear debug area"/>
		</s:NavigatorContent>
		<s:NavigatorContent label="Общие" width="100%" height="100%" id="pgCommonSettings">
			<s:Panel x="0" y="0" width="800" height="108" title="Информация о конфигурации" skinClass="skins.MyPanelSkin" dropShadowVisible="false">
				<s:Label text="Автор" x="10" y="4" height="22" verticalAlign="middle"/>
				<s:TextInput width="453" x="76" y="4" id="c_definition_author" change="valueChanged(event)"/>
				<s:Label text="Описание" x="10" y="32" height="22" verticalAlign="middle"/>
				<s:TextInput width="453" x="76" y="32" id="c_definition_description" change="valueChanged(event)"/>
				<s:Label text="URL" x="10" y="58" height="22" verticalAlign="middle"/>
				<s:TextInput width="453" x="76" y="58" id="c_definition_url" change="valueChanged(event)"/>
				<s:Label text="Дата" x="537" y="4" height="22" width="113" verticalAlign="middle" textAlign="right"/>
				<mx:DateField width="134" x="658" y="4" id="c_definition_date" change="valueChanged(event)"/>
				<s:Label text="Версия клиента" x="537" y="32" height="22" width="113" verticalAlign="middle" textAlign="right"/>
				<s:TextInput width="134" x="658" y="32" id="c_definition_gameVersion" change="valueChanged(event)"/>
				<s:Label text="Версия мода" x="537" y="58" height="22" width="113" verticalAlign="middle" textAlign="right"/>
				<s:TextInput width="134" x="658" y="58" id="c_definition_modVersion" change="valueChanged(event)"/>
			</s:Panel>
			<s:Panel x="0" y="107" width="400" height="348" title="Общие настройки" enabled="true" skinClass="skins.MyPanelSkin" dropShadowVisible="false">
				<s:CheckBox x="10" y="10" label="Показывать всплывающую панель после смерти" selected="true" id="c_battle_showPostmortemTips" change="valueChanged(event)"/>
				<s:CheckBox x="10" y="30" label="Показывать сетку координат" selected="true" id="c_battle_drawGrid" change="valueChanged(event)"/>
				<s:CheckBox x="10" y="50" label="Отключить зеркалирование иконок танков" selected="false" id="c_battle_disableMirroredVehicleIcons" change="valueChanged(event)"/>
			</s:Panel>
			<s:Panel x="400" y="107" width="400" height="348" title="Статистика" enabled="true" skinClass="skins.MyPanelSkin" dropShadowVisible="false">
				<s:CheckBox x="10" y="10" label="Включить статистику игроков" selected="false" id="c_rating_showPlayersStatistics" change="valueChanged(event)"/>
				<s:CheckBox x="10" y="30" label="Отображать во время загрузки боя" selected="false" id="c_rating_showAtBattleLoading" change="valueChanged(event)"/>
				<s:CheckBox x="10" y="50" label="Отображать в широком режиме ушей" selected="false" id="c_rating_showAtLargePlayersPanel" change="valueChanged(event)"/>
				<s:CheckBox x="10" y="70" label="Подсветка игроков в ушах в зависимости от рейтинга" selected="false" id="c_rating_colorizeMiddlePlayersPanel" change="valueChanged(event)"/>
				<s:CheckBox x="10" y="90" label="Отображать в форме статистики (при нажатии Tab)" selected="false" id="c_rating_showAtStatisticForm" change="valueChanged(event)"/>
			</s:Panel>
		</s:NavigatorContent>
		<s:NavigatorContent label="Информация" width="100%" height="100%" id="pgInformation">
			<s:Label x="10" y="10" text="Сюда навставлять ссылок на страничку мода, на последнюю версию мода, и т.д." fontWeight="bold"/>
			<s:Label x="10" y="30" text="А так же тут должен быть FAQ, инструкция и т.п." fontWeight="bold"/>
			<mx:LinkButton x="10" y="49" label="Страница мода" click="linkbutton1_clickHandler(event)"/>
		</s:NavigatorContent>
	</mx:TabNavigator>
</s:Application>
