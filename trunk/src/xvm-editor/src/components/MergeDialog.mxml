<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow name="MergeDialog"
               xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:mx="library://ns.adobe.com/flex/mx"
               title="{resourceManager.getString('main', 'mergeConfigs')}"
               width="600" height="400"
               close="onClose()">
    <fx:Script>
        <![CDATA[
            import mx.collections.XMLListCollection;
            import mx.core.IFlexDisplayObject;
            import mx.events.CloseEvent;
            import mx.managers.PopUpManager;
            
            import utils.Utils;

            [Bindable]
            public var data:XMLListCollection;

            public function parseData(v:*, name:String = null, prefix:String = null):XML
            {
                // skip leafs
                if (!v || typeof v != 'object') 
                    return null;

                var resName:String = prefix + name;
                var index:String = resourceManager.getString("mergeorder", resName) || "99";
                if (index == "[obsoleted]")
                    return null;

                var label:String = resourceManager.getString("merge", resName) ||
                    "[" + resName + "] - report translation bug to support forum";

                var xml:XML = new XML('<folder state="checked" isBranch="false" ' +
                    'label="' + label  + '" index="' + index + '"/>');

                if (!(v is Array))
                {
                    for (var n:String in v)
                    {
                        var child:XML = parseData(v[n], n, prefix == null ? "" : prefix + ".");
                        if (child != null)
                        {
                            xml.@isBranch = true;
                            xml.appendChild(child);
                        }
                    }
                }

                Utils.sortXMLByAttribute(xml, "index", Array.NUMERIC);
                return xml;
            }

            public function set config(value:Object):void
            {
                data = new XMLListCollection(parseData(value).children());
                tree.dataProvider = data;
            }

            protected function onClose():void
            {
                PopUpManager.removePopUp(this);
            }
        ]]>
    </fx:Script>
    <fx:Metadata>
        [ResourceBundle("merge")]
        [ResourceBundle("mergeorder")]
    </fx:Metadata>
    <fx:Style>
        .TreeStyle {
            folderClosedIcon: ClassReference(null);
            folderOpenIcon: ClassReference(null);
        }
    </fx:Style>
    <mx:Tree id="tree" styleName="TreeStyle" itemRenderer="controls.CheckTreeRenderer"
        labelField="@label" width="100%" height="100%" borderVisible="false"/>
</s:TitleWindow>