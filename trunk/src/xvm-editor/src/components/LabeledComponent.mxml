<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
	    xmlns:s="library://ns.adobe.com/flex/spark"
	    xmlns:mx="library://ns.adobe.com/flex/mx"
	    xmlns:c="components.*"
	    width="100%" height="22"
	    borderVisible="false"
	    backgroundColor="{conflict ? 0xFFDDDD : 0xFFFFFF}"
	    toolTip="{conflict ? 'Конфликт значений' : ''}">
	<fx:Script>
		// label
		protected var _label: String = "";
		[Bindable]
		public function get label(): String
		{
			return _label;
		}
		public function set label(v: String): void
		{
			_label = v;
		}

		// labelWidth
		protected var _labelWidth: String = "140";
		[Bindable]
		public function get labelWidth(): String
		{
			return _labelWidth;
		}
		public function set labelWidth(v: String): void
		{
			_labelWidth = v;
		}

		// conflict
		protected var _conflict: Boolean = false;
		[Bindable]
		public function get conflict(): Boolean
		{
			return _conflict;
		}
		public function set conflict(v: Boolean): void
		{
			_conflict = v;
		}

		// config
		protected var _config: String = null;
		[Bindable]
		public virtual function get config():String
		{
			return _config;
		}
		public virtual function set config(v:String): void
		{
			_config = v;
		}

		// minimum
		protected var _minimum: Number = 0;
		[Bindable]
		public function get minimum(): Number
		{
			return _minimum;
		}
		public function set minimum(v: Number): void
		{
			_minimum = v;
		}

		// maximum
		protected var _maximum: Number = 10;
		[Bindable]
		public function get maximum(): Number
		{
			return _maximum;
		}
		public function set maximum(v: Number): void
		{
			_maximum = v;
		}

		// value
		protected var _value:*;
		[Bindable]
		public virtual function get value():*
		{
			return _value;
		}
		public virtual function set value(v:*): void
		{
			_value = v;
		}

		// onChange
		protected virtual function onChange(event:Event):void
		{
			conflict = false;
			dispatchEvent(new Event(Event.CHANGE));
		}
	</fx:Script>
	<fx:Metadata>
		[Event(name="change", type="flash.events.Event")]
	</fx:Metadata>
</s:BorderContainer>
